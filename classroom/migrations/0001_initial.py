# Generated by Django 5.1.2 on 2024-10-18 20:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LevelName', models.CharField(max_length=100, verbose_name='Level Name')),
                ('level_order', models.IntegerField(unique=True, verbose_name='Level Order')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'School Level',
                'verbose_name_plural': 'School Levels',
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatusName', models.CharField(max_length=100, verbose_name='Status Name')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuses',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubjectName', models.CharField(max_length=100, verbose_name='Subject Name')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='SchoolClases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ClassName', models.CharField(max_length=100, verbose_name='Class Name')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('SchoolLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.schoollevels', verbose_name='School Level')),
            ],
            options={
                'verbose_name': 'School Class',
                'verbose_name_plural': 'School Clases',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=100, verbose_name='First Name')),
                ('middleName', models.CharField(max_length=100, verbose_name='Middle Name')),
                ('lastName', models.CharField(max_length=100, verbose_name='Last Name')),
                ('gender', models.CharField(max_length=100, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('academicYear', models.IntegerField(verbose_name='Academic Year')),
                ('emailAddress', models.CharField(max_length=100, verbose_name='Email Address')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('modifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('className', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.schoolclases', verbose_name='School Class')),
                ('schoolLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.schoollevels', verbose_name='School Level')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.statuses', verbose_name='Status')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(default='John', max_length=100, verbose_name='First Name')),
                ('lastName', models.CharField(default='Doe', max_length=100, verbose_name='Last Name')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('modifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.statuses', verbose_name='Status')),
                ('subject', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='classroom.subjects', verbose_name='Subject Name')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QuestionName', models.TextField(verbose_name='Question Name')),
                ('IsApproved', models.BooleanField(verbose_name='Is Approved')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('LevelName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.schoollevels', verbose_name='Level Name')),
                ('SubjectName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.subjects', verbose_name='Subject Name')),
                ('ApprovedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.teachers', verbose_name='Approved By')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='AssignToClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('School', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.schoolclases', verbose_name='Class Name')),
                ('Status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.statuses', verbose_name='Status')),
                ('Subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.subjects', verbose_name='Subject Name')),
                ('Teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.teachers', verbose_name='Teacher Name')),
            ],
            options={
                'verbose_name': 'Assign To Class',
                'verbose_name_plural': 'Assign To Classes',
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Answer', models.TextField(verbose_name='Answer')),
                ('IsApproved', models.BooleanField(verbose_name='Is Approved')),
                ('CreatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Create Date')),
                ('ModifiedDate', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('QuestionName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='classroom.questions', verbose_name='Question Name')),
                ('ApprovedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.teachers', verbose_name='Approved By')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
    ]
